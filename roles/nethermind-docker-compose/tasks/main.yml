---
- name: Install packages using apt
  apt:
    name: 
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common
    state: present
    update_cache: yes
  become: true

- name: Add Docker GPG apt Key
  apt_key:
    url: "{{ docker_apt_gpg_key }}"
    state: present
  become: true

- name: Add Docker Repository
  apt_repository:
    repo: "{{ docker_apt_repository }}"
    state: present
    update_cache: true
  become: true

- name: Update apt and install docker-ce
  apt: 
    update_cache: no 
    name: docker-ce 
    state: present
  become: true

- name: Create "docker" group
  group:
    name: "{{ docker_group }}"
    state: present
  become: true

- name: Add ansible "nethermind" user to "docker" group
  user:
    name: "{{ ansible_user }}"
    groups: "{{ docker_group }}"
    append: yes
  become: true

- name: Update apt packages
  apt:
    update_cache: yes
  become: true

- name: install docker-compose
  get_url:
    url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}
    dest: /usr/local/bin/docker-compose
    mode: 'u+x,g+x'
    owner: "{{ ansible_user }}"
    group: "{{ docker_group }}"
  become: true

- name: Create symlink
  file: 
    src: /usr/local/bin/docker-compose
    dest: /usr/bin/docker-compose 
    state: link
  become: true

- name: Copy Node Management CLI
  copy:
    src: "{{ chain }}/nnm-docker-compose"
    dest: /usr/local/bin/nnm
    mode: a+x
  become: true

- name: Copy docker-compose.yml file
  copy:
    src: "{{ chain }}/docker-compose.{{ chain }}.yml"
    dest: "{{ ansible_env.HOME }}/docker-compose.yml"

- name: Create data directory
  file:
    path: "{{ ansible_env.HOME }}/data"
    state: directory
  
- name: Copy environment file
  copy:
    src: "{{ chain }}/.env.{{ chain }}"
    dest: "{{ ansible_env.HOME }}/.env"
  notify:
    - start docker-compose
  changed_when: true